{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Installation requirements For Typescript Typescript is an Open Source technology. It can run on any browser, any host, and any OS. You will need the following tools to write and test a Typescript program : Installing Node.js Node.js is an open source, cross-platform runtime environment for server-side JavaScript. Node.js is required to run JavaScript without a browser support. We have to install LTS version as it\u2019s recommended for most users. curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt-get install -y nodejs Update NPM Normally, NPM will be installed with the Node.js itself. However, we can update it to the latest version using the below command. sudo npm install npm@latest -g Visual Studio Code (Recommended) The easiest way to install Visual Studio Code for Debian/Ubuntu based distributions is to download and install the .deb package (64-bit), either through the graphical software center if it's available, or through the command line with: sudo apt install ./<file>.deb For Angular Make sure the above requirements are installed and then install Angular CLI. Angular CLI is a command-line interface tool that you use to initialize, develop, scaffold, and maintain Angular applications directly from a command shell. Install the CLI using the npm package manager: npm install -g @angular/cli To create, build, and serve a new, basic Angular project on a development server, go to the parent directory of your new workspace use the following commands: ng new my-first-project cd my-first-project ng serve In your browser, open http://localhost:4200/ to see the new application run. When you use the ng serve command to build an application and serve it locally, the server automatically rebuilds the application and reloads the page when you change any of the source files.","title":"Installation Guide"},{"location":"#installation-requirements","text":"","title":"Installation requirements"},{"location":"#for-typescript","text":"Typescript is an Open Source technology. It can run on any browser, any host, and any OS. You will need the following tools to write and test a Typescript program : Installing Node.js Node.js is an open source, cross-platform runtime environment for server-side JavaScript. Node.js is required to run JavaScript without a browser support. We have to install LTS version as it\u2019s recommended for most users. curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt-get install -y nodejs Update NPM Normally, NPM will be installed with the Node.js itself. However, we can update it to the latest version using the below command. sudo npm install npm@latest -g Visual Studio Code (Recommended) The easiest way to install Visual Studio Code for Debian/Ubuntu based distributions is to download and install the .deb package (64-bit), either through the graphical software center if it's available, or through the command line with: sudo apt install ./<file>.deb","title":"For Typescript"},{"location":"#for-angular","text":"Make sure the above requirements are installed and then install Angular CLI. Angular CLI is a command-line interface tool that you use to initialize, develop, scaffold, and maintain Angular applications directly from a command shell. Install the CLI using the npm package manager: npm install -g @angular/cli To create, build, and serve a new, basic Angular project on a development server, go to the parent directory of your new workspace use the following commands: ng new my-first-project cd my-first-project ng serve In your browser, open http://localhost:4200/ to see the new application run. When you use the ng serve command to build an application and serve it locally, the server automatically rebuilds the application and reloads the page when you change any of the source files.","title":"For Angular"},{"location":"angular/","text":"Angular Introduction Angular is an application design framework and development platform for creating efficient and sophisticated single-page apps. Angular is a development platform, built on TypeScript. As a platform, Angular includes: A component-based framework for building scalable web applications A collection of well-integrated libraries that cover a wide variety of features, including routing, forms management, client-server communication, and more A suite of developer tools to help you develop, build, test, and update your code Angular applications: The essentials This section explains the core ideas behind Angular. Components Components are the building blocks that compose an application. A component includes a TypeScript class with a @Component() decorator, an HTML template, and styles. The @Component() decorator specifies the following Angular-specific information: A CSS selector that defines how the component is used in a template. HTML elements in your template that match this selector become instances of the component. An HTML template that instructs Angular how to render the component. An optional set of CSS styles that define the appearance of the template's HTML elements. Components also make your application easier to unit test and can improve the overall readability of your code. Templates Every component has an HTML template that declares how that component renders. You define this template either inline or by file path. Angular extends HTML with additional syntax that lets you insert dynamic values from your component. Angular automatically updates the rendered DOM when your component\u2019s state changes. Dependency injection Dependency injection allows you to declare the dependencies of your TypeScript classes without taking care of their instantiation. Instead, Angular handles the instantiation for you. This design pattern allows you to write more testable and flexible code. Basic App using Angular Tour of Employees The Tour of Employees application helps an organisation manage its employees. The finished application acquires and displays a list of employees, edits a selected employees details, and navigates among different views of employee data. Here's a visual idea of what this app does, beginning with the \"Dashboard\" view and the top employees of the organisation: You can click the two links above the dashboard (\"Dashboard\" and \"Employees\") to navigate between this Dashboard view and a Employees view. You can search for an employee in the organisation using the Employee Search option. If you click one of the dashboard employees, the router opens a \"Employee Details\" view where you can change the employee name also. Clicking the \"Back\" button returns you to the Dashboard. Links at the top take you to either of the main views. If you click \"Employees\", the application displays the \"Employees\" master list view. You can add as well as delete employees after you navigate to the Employees view. At the bottom messages are displayed to let the user know what is going on. Check out the app at https://saurabh-wandhekar.github.io/Basic-Angular-App/","title":"Angular"},{"location":"angular/#angular","text":"","title":"Angular"},{"location":"angular/#introduction","text":"Angular is an application design framework and development platform for creating efficient and sophisticated single-page apps. Angular is a development platform, built on TypeScript. As a platform, Angular includes: A component-based framework for building scalable web applications A collection of well-integrated libraries that cover a wide variety of features, including routing, forms management, client-server communication, and more A suite of developer tools to help you develop, build, test, and update your code","title":"Introduction"},{"location":"angular/#angular-applications-the-essentials","text":"This section explains the core ideas behind Angular.","title":"Angular applications: The essentials"},{"location":"angular/#components","text":"Components are the building blocks that compose an application. A component includes a TypeScript class with a @Component() decorator, an HTML template, and styles. The @Component() decorator specifies the following Angular-specific information: A CSS selector that defines how the component is used in a template. HTML elements in your template that match this selector become instances of the component. An HTML template that instructs Angular how to render the component. An optional set of CSS styles that define the appearance of the template's HTML elements. Components also make your application easier to unit test and can improve the overall readability of your code.","title":"Components"},{"location":"angular/#templates","text":"Every component has an HTML template that declares how that component renders. You define this template either inline or by file path. Angular extends HTML with additional syntax that lets you insert dynamic values from your component. Angular automatically updates the rendered DOM when your component\u2019s state changes.","title":"Templates"},{"location":"angular/#dependency-injection","text":"Dependency injection allows you to declare the dependencies of your TypeScript classes without taking care of their instantiation. Instead, Angular handles the instantiation for you. This design pattern allows you to write more testable and flexible code.","title":"Dependency injection"},{"location":"angular/#basic-app-using-angular","text":"","title":"Basic App using Angular"},{"location":"angular/#tour-of-employees","text":"The Tour of Employees application helps an organisation manage its employees. The finished application acquires and displays a list of employees, edits a selected employees details, and navigates among different views of employee data. Here's a visual idea of what this app does, beginning with the \"Dashboard\" view and the top employees of the organisation: You can click the two links above the dashboard (\"Dashboard\" and \"Employees\") to navigate between this Dashboard view and a Employees view. You can search for an employee in the organisation using the Employee Search option. If you click one of the dashboard employees, the router opens a \"Employee Details\" view where you can change the employee name also. Clicking the \"Back\" button returns you to the Dashboard. Links at the top take you to either of the main views. If you click \"Employees\", the application displays the \"Employees\" master list view. You can add as well as delete employees after you navigate to the Employees view. At the bottom messages are displayed to let the user know what is going on. Check out the app at https://saurabh-wandhekar.github.io/Basic-Angular-App/","title":"Tour of Employees"},{"location":"references/","text":"References: https://mvthanoshan.medium.com/how-to-setup-angular-on-ubuntu-14633ee93a57 https://angular.io/cli https://angular.io/tutorial https://angular.io/guide/architecture https://www.tutorialspoint.com/typescript/index.htm","title":"References"},{"location":"references/#references","text":"https://mvthanoshan.medium.com/how-to-setup-angular-on-ubuntu-14633ee93a57 https://angular.io/cli https://angular.io/tutorial https://angular.io/guide/architecture https://www.tutorialspoint.com/typescript/index.htm","title":"References:"},{"location":"typescript/","text":"TypeScript Introduction TypeScript lets you write JavaScript the way you really want to. TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. TypeScript is pure object oriented with classes, interfaces and statically typed like C# or Java. The popular JavaScript framework Angular 2.0 is written in TypeScript. Advantages The benefits of TypeScript include \u2212 Compilation \u2212 JavaScript is an interpreted language. Hence, it needs to be run to test that it is valid. It means you write all the codes just to find no output, in case there is an error. Hence, you have to spend hours trying to find bugs in the code. The TypeScript transpiler provides the error-checking feature. TypeScript will compile the code and generate compilation errors, if it finds some sort of syntax errors. This helps to highlight errors before the script is run. Strong Static Typing \u2212 JavaScript is not strongly typed. TypeScript comes with an optional static typing and type inference system through the TLS (TypeScript Language Service). The type of a variable, declared with no type, may be inferred by the TLS based on its value. TypeScript supports type definitions for existing JavaScript libraries. TypeScript Definition file (with .d.ts extension) provides definition for external JavaScript libraries. Hence, TypeScript code can contain these libraries. TypeScript supports Object Oriented Programming concepts like classes, interfaces, inheritance, etc. Compile and Execute a TypeScript Program Let us see how to compile and execute a TypeScript program using Visual Studio Code. Follow the steps given below \u2212 Step 1 \u2212 Save the file with .ts extension. We shall save the file as Test.ts. The code editor marks errors in the code, if any, while you save it. Step 2 \u2212 Right-click the TypeScript file under the Working Files option in VS Code\u2019s Explore Pane. Select Open in Command Prompt option Step 3 \u2212 To compile the file use the following command on the terminal window. tsc Test.ts Step 4 \u2212 The file is compiled to Test.js. To run the program written, type the following in the terminal. node Test.js","title":"Typescript"},{"location":"typescript/#typescript","text":"","title":"TypeScript"},{"location":"typescript/#introduction","text":"TypeScript lets you write JavaScript the way you really want to. TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. TypeScript is pure object oriented with classes, interfaces and statically typed like C# or Java. The popular JavaScript framework Angular 2.0 is written in TypeScript.","title":"Introduction"},{"location":"typescript/#advantages","text":"The benefits of TypeScript include \u2212 Compilation \u2212 JavaScript is an interpreted language. Hence, it needs to be run to test that it is valid. It means you write all the codes just to find no output, in case there is an error. Hence, you have to spend hours trying to find bugs in the code. The TypeScript transpiler provides the error-checking feature. TypeScript will compile the code and generate compilation errors, if it finds some sort of syntax errors. This helps to highlight errors before the script is run. Strong Static Typing \u2212 JavaScript is not strongly typed. TypeScript comes with an optional static typing and type inference system through the TLS (TypeScript Language Service). The type of a variable, declared with no type, may be inferred by the TLS based on its value. TypeScript supports type definitions for existing JavaScript libraries. TypeScript Definition file (with .d.ts extension) provides definition for external JavaScript libraries. Hence, TypeScript code can contain these libraries. TypeScript supports Object Oriented Programming concepts like classes, interfaces, inheritance, etc.","title":"Advantages"},{"location":"typescript/#compile-and-execute-a-typescript-program","text":"Let us see how to compile and execute a TypeScript program using Visual Studio Code. Follow the steps given below \u2212 Step 1 \u2212 Save the file with .ts extension. We shall save the file as Test.ts. The code editor marks errors in the code, if any, while you save it. Step 2 \u2212 Right-click the TypeScript file under the Working Files option in VS Code\u2019s Explore Pane. Select Open in Command Prompt option Step 3 \u2212 To compile the file use the following command on the terminal window. tsc Test.ts Step 4 \u2212 The file is compiled to Test.js. To run the program written, type the following in the terminal. node Test.js","title":"Compile and Execute a TypeScript Program"}]}